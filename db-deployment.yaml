apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: mysql
    tier: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS icecream;

    USE icecream;

    DROP TABLE IF EXISTS icecreams;

    CREATE TABLE icecreams (
        id int NOT NULL AUTO_INCREMENT,
        flavor VARCHAR(50),
        PRIMARY KEY (id)
    );

    INSERT INTO icecreams (flavor) VALUES ('chocolate');
    
    GRANT ALL PRIVILEGES ON icecream.* TO 'admin'@'%' IDENTIFIED BY 'elvira';
    FLUSH PRIVILEGES;

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  selector:
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
        tier: database
    spec:
      containers:
      - image: mysql:8.0
        name: mysql
        env:
        - name: MYSQL_DATABASE
          value: icecream
        - name: MYSQL_PASSWORD
          value: elvira
        - name: MYSQL_ROOT_PASSWORD
          value: elvira
        - name: SERVICE_TAGS
          value: prod
        - name: SERVICE_NAME
          value: mysql
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes: 
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config

---

apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql
    tier: database